default:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

stages:
  - build
#  - test
  - release
  - deploy

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

build:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

#test1:
#  stage: test
#  script:
#    - docker pull $CONTAINER_TEST_IMAGE
    #- docker run $CONTAINER_TEST_IMAGE /script/to/run/tests

#test2:
#  stage: test
#  script:
#    - docker pull $CONTAINER_TEST_IMAGE
    #- docker run $CONTAINER_TEST_IMAGE /script/to/run/another/test

release-image:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  needs: [build]
  when: manual

deploy:
  before_script:
    - ''
  services: []
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - kubectl config get-contexts
    - kubectl config use-context dpapajohn/newsspring:aws-eks-agent
    - kubectl get pods
  needs: []
  when: manual

  deploy2:
    before_script:
    - ''
    services: []
    stage: deploy
    image: dtzar/helm-kubectl
    script:
      - kubectl config set-cluster k8s --server="${SERVER}"
      - kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY_DATA}
      - kubectl config set-credentials gitlab --token="${USER_TOKEN}"
      - kubectl config set-context default --cluster=k8s --user=gitlab
      - kubectl config use-context default
      - kubectl apply -f deployment.yaml
    needs: []
    when: manual
