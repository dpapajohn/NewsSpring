name: "AWS-ECR-Push"
on:
  workflow_dispatch:
  
jobs:
  DockerPush:
    name: Docker Build and Push
    # allows the job to connect to the identity endpoint and recieve the token (for AWS roles, via github OIDC)
    permissions:
      id-token: write
      # makes sure we can still read our repository, too
      contents: read
    runs-on: ubuntu-latest  
    steps:          
        - name: Checkout repo
          uses: actions/checkout@v3

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
          with:
            role-to-assume: ${{secrets.AWS_ROLE_ARN}}
            aws-region: us-west-1

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: Build, tag, and push docker image to Amazon ECR
          env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: dpapajohn-github
            IMAGE_TAG: newsspring
          run: |
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
  EcsDeploy:
    name: AWS ECS Deploy
    needs: [DockerPush]
    # allows the job to connect to the identity endpoint and recieve the token (for AWS roles, via github OIDC)
    permissions:
      id-token: write
      # makes sure we can still read our repository, too
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: ${{secrets.AWS_ROLE_ARN}}
          aws-region: us-west-1

      - name: Populate api key into task definition json
        run: sed -i 's/<NEWS_API_KEY>/${{secrets.NEWS_API_KEY}}/g' taskDefinition.json

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: taskDefinition.json
          service: NewsSpringWithApplicationLoadBalancer
          cluster: NewsSpringCluster2
          wait-for-service-stability: true
  
